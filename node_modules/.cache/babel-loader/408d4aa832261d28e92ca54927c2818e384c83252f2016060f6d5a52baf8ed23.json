{"ast":null,"code":"var _jsxFileName = \"/Users/nhelie-treezor/dev/tdd-cleanarchi-web-15-fevrier-2023/src/who-wants-to-be-millionaire/adapters/primary/react/components/currentQuestion.component.tsx\",\n  _s = $RefreshSig$();\nimport { QuestionTitle } from \"./questionTitle.component\";\nimport { AnswersOptions } from \"./answersOptions.component\";\nimport { useEffect, useRef } from \"react\";\nimport { retrieveCurrentQuestion } from \"../../../../core-logic/usecases/current-question-retrieval/retrieveCurrentQuestion\";\nimport { useAppDispatch, useAppSelector } from \"../../../../store/reduxStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CurrentQuestion = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const currentQuestion = useAppSelector(state => state.currentQuestionRetrieval.data);\n  const mounted = useRef(false);\n  useEffect(() => {\n    if (!mounted.current) {\n      dispatch(retrieveCurrentQuestion());\n      mounted.current = true;\n    }\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(QuestionTitle, {\n        title: currentQuestion.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AnswersOptions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(CurrentQuestion, \"z1PGRFvHDENzRq6ZYjN4XgUvACE=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n_c = CurrentQuestion;\nvar _c;\n$RefreshReg$(_c, \"CurrentQuestion\");","map":{"version":3,"names":["QuestionTitle","AnswersOptions","useEffect","useRef","retrieveCurrentQuestion","useAppDispatch","useAppSelector","CurrentQuestion","dispatch","currentQuestion","state","currentQuestionRetrieval","data","mounted","current","label"],"sources":["/Users/nhelie-treezor/dev/tdd-cleanarchi-web-15-fevrier-2023/src/who-wants-to-be-millionaire/adapters/primary/react/components/currentQuestion.component.tsx"],"sourcesContent":["import { QuestionTitle } from \"./questionTitle.component\";\nimport { AnswersOptions } from \"./answersOptions.component\";\nimport { useEffect, useRef } from \"react\";\nimport { retrieveCurrentQuestion } from \"../../../../core-logic/usecases/current-question-retrieval/retrieveCurrentQuestion\";\nimport { useAppDispatch, useAppSelector } from \"../../../../store/reduxStore\";\n\nexport const CurrentQuestion = () => {\n  const dispatch = useAppDispatch();\n  const currentQuestion = useAppSelector(\n    (state) => state.currentQuestionRetrieval.data\n  );\n  const mounted = useRef(false);\n\n  useEffect(() => {\n    if (!mounted.current) {\n      dispatch(retrieveCurrentQuestion());\n      mounted.current = true;\n    }\n  }, [dispatch]);\n\n  return (\n    <>\n      {currentQuestion && (\n        <div>\n          <QuestionTitle title={currentQuestion.label} />\n          <AnswersOptions />\n        </div>\n      )}\n    </>\n  );\n};\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,2BAA2B;AACzD,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,uBAAuB,QAAQ,oFAAoF;AAC5H,SAASC,cAAc,EAAEC,cAAc,QAAQ,8BAA8B;AAAC;AAAA;AAE9E,OAAO,MAAMC,eAAe,GAAG,MAAM;EAAA;EACnC,MAAMC,QAAQ,GAAGH,cAAc,EAAE;EACjC,MAAMI,eAAe,GAAGH,cAAc,CACnCI,KAAK,IAAKA,KAAK,CAACC,wBAAwB,CAACC,IAAI,CAC/C;EACD,MAAMC,OAAO,GAAGV,MAAM,CAAC,KAAK,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,IAAI,CAACW,OAAO,CAACC,OAAO,EAAE;MACpBN,QAAQ,CAACJ,uBAAuB,EAAE,CAAC;MACnCS,OAAO,CAACC,OAAO,GAAG,IAAI;IACxB;EACF,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,oBACE;IAAA,UACGC,eAAe,iBACd;MAAA,wBACE,QAAC,aAAa;QAAC,KAAK,EAAEA,eAAe,CAACM;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eAC/C,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EAErB,iBACA;AAEP,CAAC;AAAC,GAxBWR,eAAe;EAAA,QACTF,cAAc,EACPC,cAAc;AAAA;AAAA,KAF3BC,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}