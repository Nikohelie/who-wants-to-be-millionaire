{"ast":null,"code":"export class FakeCurrentQuestionGateway {\n  constructor(arrayIndexPicker, questionsPool) {\n    this.arrayIndexPicker = arrayIndexPicker;\n    this.questionsPool = questionsPool;\n  }\n  submitAnswer(questionId, answerLetter) {\n    throw new Error(\"Method not implemented.\");\n  }\n  async loadCurrentQuestion() {\n    return this.questionsPool[this.arrayIndexPicker.pick(this.questionsPool)];\n  }\n}","map":{"version":3,"names":["FakeCurrentQuestionGateway","constructor","arrayIndexPicker","questionsPool","submitAnswer","questionId","answerLetter","Error","loadCurrentQuestion","pick"],"sources":["/Users/nhelie-treezor/dev/tdd-cleanarchi-web-15-fevrier-2023/src/who-wants-to-be-millionaire/adapters/secondary/gateways/current-gateway/fake/fakeCurrentQuestionGateway.ts"],"sourcesContent":["import { CurrentQuestionGateway } from \"../../../../../core-logic/gateways/currentQuestionGateway\";\nimport { AnswerSubmissionValidation } from \"../../../../../core-logic/usecases/answer-submission/answerSubmissionValidation\";\nimport { Question } from \"../../../../../core-logic/usecases/current-question-retrieval/question\";\nimport { AnswerLetter } from \"../../../../../store/appState\";\n\nexport class FakeCurrentQuestionGateway implements CurrentQuestionGateway {\n  constructor(\n    private arrayIndexPicker: ArrayIndexPicker,\n    private questionsPool: Question[]\n  ) {}\n  submitAnswer(\n    questionId: string,\n    answerLetter: AnswerLetter\n  ): Promise<AnswerSubmissionValidation> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  async loadCurrentQuestion(): Promise<Question> {\n    return this.questionsPool[this.arrayIndexPicker.pick(this.questionsPool)];\n  }\n}\n\nexport interface ArrayIndexPicker {\n  pick<T>(array: Array<T>): number;\n}\n"],"mappings":"AAKA,OAAO,MAAMA,0BAA0B,CAAmC;EACxEC,WAAW,CACDC,gBAAkC,EAClCC,aAAyB,EACjC;IAAA,KAFQD,gBAAkC,GAAlCA,gBAAkC;IAAA,KAClCC,aAAyB,GAAzBA,aAAyB;EAChC;EACHC,YAAY,CACVC,UAAkB,EAClBC,YAA0B,EACW;IACrC,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAEA,MAAMC,mBAAmB,GAAsB;IAC7C,OAAO,IAAI,CAACL,aAAa,CAAC,IAAI,CAACD,gBAAgB,CAACO,IAAI,CAAC,IAAI,CAACN,aAAa,CAAC,CAAC;EAC3E;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}