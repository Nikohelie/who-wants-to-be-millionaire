{"ast":null,"code":"var _s = $RefreshSig$();\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { currentQuestionRetrievalReducer as currentQuestionRetrieval } from \"../core-logic/reducers/currentQuestionRetrieval.reducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport const initReduxStore = dependencies => {\n  return configureStore({\n    reducer: {\n      currentQuestionRetrieval\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware({\n      thunk: {\n        extraArgument: dependencies\n      },\n      serializableCheck: false\n    }),\n    devTools: true\n  });\n};\nexport const useAppDispatch = () => {\n  _s();\n  return useDispatch();\n};\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});\nexport const useAppSelector = useSelector;","map":{"version":3,"names":["configureStore","currentQuestionRetrievalReducer","currentQuestionRetrieval","useDispatch","useSelector","initReduxStore","dependencies","reducer","middleware","getDefaultMiddleware","thunk","extraArgument","serializableCheck","devTools","useAppDispatch","useAppSelector"],"sources":["/Users/nhelie-treezor/dev/tdd-cleanarchi-web-15-fevrier-2023/src/who-wants-to-be-millionaire/store/reduxStore.ts"],"sourcesContent":["import {\n  Action,\n  AnyAction,\n  configureStore,\n  Store,\n  ThunkAction,\n  ThunkDispatch,\n} from \"@reduxjs/toolkit\";\nimport { AppState } from \"./appState\";\nimport { currentQuestionRetrievalReducer as currentQuestionRetrieval } from \"../core-logic/reducers/currentQuestionRetrieval.reducer\";\nimport { CurrentQuestionGateway } from \"../core-logic/gateways/currentQuestionGateway\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\n\nexport interface Dependencies {\n  currentQuestionGateway: CurrentQuestionGateway;\n}\n\nexport const initReduxStore = (dependencies: Partial<Dependencies>) => {\n  return configureStore({\n    reducer: {\n      currentQuestionRetrieval,\n    },\n    middleware: (getDefaultMiddleware) =>\n      getDefaultMiddleware({\n        thunk: {\n          extraArgument: dependencies,\n        },\n        serializableCheck: false,\n      }),\n    devTools: true,\n  });\n};\n\nexport type ReduxStore = Store<AppState> & {\n  dispatch: ThunkDispatch<AppState, Dependencies, Action>;\n};\n\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  AppState,\n  Dependencies,\n  AnyAction\n>;\n\nexport type AppDispatch = ThunkDispatch<AppState, Dependencies, Action>;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<AppState> = useSelector;\n"],"mappings":";AAAA,SAGEA,cAAc,QAIT,kBAAkB;AAEzB,SAASC,+BAA+B,IAAIC,wBAAwB,QAAQ,yDAAyD;AAErI,SAA+BC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAM5E,OAAO,MAAMC,cAAc,GAAIC,YAAmC,IAAK;EACrE,OAAON,cAAc,CAAC;IACpBO,OAAO,EAAE;MACPL;IACF,CAAC;IACDM,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;MACnBC,KAAK,EAAE;QACLC,aAAa,EAAEL;MACjB,CAAC;MACDM,iBAAiB,EAAE;IACrB,CAAC,CAAC;IACJC,QAAQ,EAAE;EACZ,CAAC,CAAC;AACJ,CAAC;AAeD,OAAO,MAAMC,cAAc,GAAG;EAAA;EAAA,OAAMX,WAAW,EAAe;AAAA;AAAC,GAAlDW,cAAc;EAAA,QAASX,WAAW;AAAA;AAC/C,OAAO,MAAMY,cAA8C,GAAGX,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}